### 스터디 목록 조회 (키워드, 정렬, 오프셋 옵션 포함)
# 키워드로 검색하고, 'createdAt'(최신순)으로 정렬하며, 0번째부터 시작하는 스터디 목록을 가져옵니다.
GET http://localhost:5000/api/study-list?keyword=새로운&order=createdAt&offset=0



### 스터디 목록 조회 (기본 정렬 및 오프셋)
# 정렬 기준과 오프셋을 지정하지 않으면 기본값(최신순, 0번째부터)으로 스터디 목록을 가져옵니다.
GET http://localhost:5000/api/study-list


### 스터디 목록 조회 (포인트 내림차순 정렬)
# 'pointsDesc'(포인트 내림차순) 기준으로 스터디 목록을 정렬하여 가져옵니다.
GET http://localhost:5000/api/study-list?order=pointsDesc


### 스터디 목록 조회 (오래된 순 정렬)
# 'oldest'(오래된 순) 기준으로 스터디 목록을 정렬하여 가져옵니다.
GET http://localhost:5000/api/study-list?order=oldest


### 스터디 목록 조회 (포인트 오름차순 정렬)
# 'pointsAsc'(포인트 오름차순) 기준으로 스터디 목록을 정렬하여 가져옵니다.
GET http://localhost:5000/api/study-list?order=pointsAsc


### 스터디 목록 조회 (키워드 검색만)
# 'keyword'를 사용하여 특정 키워드가 포함된 스터디 목록을 검색합니다.
GET http://localhost:5000/api/study-list?keyword=스터디


### 스터디 목록 조회 (오프셋만)
# 'offset'을 사용하여 특정 위치부터 스터디 목록을 가져옵니다.
GET http://localhost:5000/api/study-list?offset=6


### 스터디 목록 조회 (키워드 검색, 포인트 내림차순, 오프셋)
# 키워드 검색, 포인트 내림차순, 오프셋을 모두 적용한 스터디 목록을 가져옵니다.
GET http://localhost:5000/api/study-list?keyword=예시&order=pointsDesc&offset=3


### 새로운 스터디 생성
# 새로운 스터디 그룹을 생성합니다.
POST http://localhost:5000/api/study/registration
Content-Type: application/json

{
  "name": "새로운 스터디 그룹",
  "description": "집중 스터디를 위한 그룹입니다.",
  "background": "숲",
  "password": "안전한비밀번호123",
  "passwordConfirm": "안전한비밀번호123",
  "creatorNick": "스터디마스터"
}

### 새로운 스터디 생성 (필수 필드만)
# 필수 필드만 사용하여 새로운 스터디 그룹을 생성합니다.
POST http://localhost:5000/api/study/registration
Content-Type: application/json

{
  "name": "필수만 스터디",
  "password": "password",
  "passwordConfirm": "password",
  "creatorNick": "필수만"
}

### ID로 스터디 상세 조회
# 특정 ID의 스터디 상세 정보를 조회합니다. 
GET http://localhost:5000/api/study/5


### ID로 스터디 상세 조회 (최근 본 스터디 아이디 업데이트 확인)
# 특정 ID의 스터디 상세 정보를 조회하고, 최근 본 스터디 아이디가 헤더에 recentStudyIds: [5] 형태로 저장장
GET http://localhost:5000/api/study/5


### ID로 스터디 삭제
# 특정 ID의 스터디를 삭제합니다. 
DELETE http://localhost:5000/api/study/26
Content-Type: application/json

{
  "password": "password"
}

### ID로 스터디 정보 수정
# 특정 ID의 스터디 정보를 수정합니다. 
PATCH http://localhost:5000/api/study/6
Content-Type: application/json

{
  "password": "안전한비밀번호123",
  "name": "수정된 스터디 이름",
  "description": "스터디 그룹에 대한 수정된 설명입니다.",
  "background": "바다"
}

### ID로 스터디 정보 수정 (이름만)
# 특정 ID의 스터디 정보를 수정합니다. 
PATCH http://localhost:5000/api/study/6
Content-Type: application/json

{
  "password": "안전한비밀번호123",
  "name": "이름만 수정"
}

### ID로 스터디 정보 수정 (설명만)
# 특정 ID의 스터디 정보를 수정합니다. 
PATCH http://localhost:5000/api/study/6
Content-Type: application/json

{
  "password": "안전한비밀번호123",
  "description": "설명만 수정"
}

### ID로 스터디 정보 수정 (배경만)
# 특정 ID의 스터디 정보를 수정합니다. 
PATCH http://localhost:5000/api/study/6
Content-Type: application/json

{
  "password": "안전한비밀번호123",
  "background": "배경만 수정"
}

### 스터디에 이모지 추가
# 특정 스터디에 이모지를 추가합니다. 
POST http://localhost:5000/api/study/5/emoji
Content-Type: application/json

{
  "emoji": "👍"
}

### 스터디에 이모지 추가 (다른 이모지)
# 특정 스터디에 다른 이모지를 추가합니다.
POST http://localhost:5000/api/study/5/emoji
Content-Type: application/json

{
  "emoji": "❤️"
}

### 스터디에 이모지 추가 (이모지 없이)
# 특정 스터디에 이모지 없이 요청을 보냅니다.
POST http://localhost:5000/api/study/5/emoji
Content-Type: application/json

{
}

### ID로 스터디 공유
# 특정 ID의 스터디를 공유합니다.
POST http://localhost:5000/api/study/5/share
Content-Type: application/json
